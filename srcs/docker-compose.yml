services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    env_file: .env
    volumes:
      - /home/tboussad/data/mariadb_data:/var/lib/mysql
    networks:
      - docker-network
    environment:
      - DB_NAME=wordpress
      - DB_USER=wp_user
      - DB_PASS=wp_pass
      - DB_ROOT_PASSWORD=rootpass
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$DB_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
  
  redis:
    build: ./requirements/bonus/redis
    container_name: redis
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - docker-network
    restart: always

  wordpress:
    depends_on:
      mariadb:
        condition: service_healthy
    build: ./requirements/wordpress
    container_name: wordpress
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: wp_pass
      WORDPRESS_DB_NAME: wordpress
      WP_ADMIN_USER: admin
      WP_ADMIN_PASSWORD: adminpass
      WP_ADMIN_EMAIL: admin@example.com
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - /home/tboussad/data/wordpress_data:/var/www/wordpress
    networks:
      - docker-network
    expose:
      - "80"
      - "9000"
    restart: always

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - /home/tboussad/data/wordpress_data:/var/www/wordpress
    networks:
      - docker-network
    restart: always

volumes:
  wordpress_data:
  mariadb_data:

networks:
  docker-network:
    driver: bridge
